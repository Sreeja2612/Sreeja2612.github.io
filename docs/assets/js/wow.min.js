// (function(){var t,e,n,i=function(t,e){return function(){return t.apply(e,arguments)}},o=[].indexOf;e=function(){function t(){}return t.prototype.extend=function(t,e){var n,i;for(n in e)i=e[n],null==t[n]&&(t[n]=i);return t},t}(),n=this.WeakMap||this.MozWeakMap,t=this.MutationObserver||this.WebkitMutationObserver||this.MozMutationObserver,this.WOW=function(){function r(t){null==t&&(t={}),this.scrollCallback=i(this.scrollCallback,this),this.scrollHandler=i(this.scrollHandler,this),this.start=i(this.start,this),this.scrolled=!0,this.config=this.util().extend(t,this.defaults),this.animationNameCache=new n}return r.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,live:!0},r.prototype.init=function(){var t;return this.element=window.document.documentElement,"interactive"===(t=document.readyState)||"complete"===t?this.start():document.addEventListener("DOMContentLoaded",this.start),this.finished=[]},r.prototype.start=function(){var e,n,i,o;if(this.stopped=!1,this.boxes=function(){var t,n,i,o;for(o=[],t=0,n=(i=this.element.querySelectorAll("."+this.config.boxClass)).length;n>t;t++)e=i[t],o.push(e);return o}.call(this),this.all=function(){var t,n,i,o;for(o=[],t=0,n=(i=this.boxes).length;n>t;t++)e=i[t],o.push(e);return o}.call(this),this.boxes.length)for(n=0,i=(o=this.boxes).length;i>n;n++)e=o[n],this.applyStyle(e,!0);return window.addEventListener("scroll",this.scrollHandler,!1),window.addEventListener("resize",this.scrollHandler,!1),this.interval=setInterval(this.scrollCallback,50),this.config.live?new t(function(t){return function(e){var n,i,o,r,s;for(s=[],o=0,r=e.length;r>o;o++)i=e[o],s.push(function(){var t,e,o,r;for(r=[],t=0,e=(o=i.addedNodes||[]).length;e>t;t++)n=o[t],r.push(this.doSync(n));return r}.call(t));return s}}(this)).observe(document.body,{childList:!0,subtree:!0}):void 0},r.prototype.stop=function(){return this.stopped=!0,window.removeEventListener("scroll",this.scrollHandler,!1),window.removeEventListener("resize",this.scrollHandler,!1),null!=this.interval?clearInterval(this.interval):void 0},r.prototype.sync=function(){return t.notSupported?this.doSync(this.element):void 0},r.prototype.doSync=function(t){var e,n,i,r,s;if(!this.stopped){if(null==t&&(t=this.element),1!==t.nodeType)return;for(s=[],n=0,i=(r=(t=t.parentNode||t).querySelectorAll("."+this.config.boxClass)).length;i>n;n++)e=r[n],o.call(this.all,e)<0?(this.applyStyle(e,!0),this.boxes.push(e),this.all.push(e),s.push(this.scrolled=!0)):s.push(void 0);return s}},r.prototype.show=function(t){return this.applyStyle(t),t.className=t.className+" "+this.config.animateClass},r.prototype.applyStyle=function(t,e){var n,i,o,r;return i=t.getAttribute("data-wow-duration"),n=t.getAttribute("data-wow-delay"),o=t.getAttribute("data-wow-iteration"),this.animate((r=this,function(){return r.customStyle(t,e,i,n,o)}))},r.prototype.animate="requestAnimationFrame"in window?function(t){return window.requestAnimationFrame(t)}:function(t){return t()},r.prototype.customStyle=function(t,e,n,i,o){return e&&this.cacheAnimationName(t),t.style.visibility=e?"hidden":"visible",n&&this.vendorSet(t.style,{animationDuration:n}),i&&this.vendorSet(t.style,{animationDelay:i}),o&&this.vendorSet(t.style,{animationIterationCount:o}),this.vendorSet(t.style,{animationName:e?"none":this.cachedAnimationName(t)}),t},r.prototype.vendors=["moz","webkit"],r.prototype.vendorSet=function(t,e){var n,i,o,r;for(n in r=[],e)i=e[n],t[""+n]=i,r.push(function(){var e,r,s,a;for(a=[],e=0,r=(s=this.vendors).length;r>e;e++)o=s[e],a.push(t[""+o+n.charAt(0).toUpperCase()+n.substr(1)]=i);return a}.call(this));return r},r.prototype.vendorCSS=function(t,e){var n,i,o,r,s,a;for(n=(i=window.getComputedStyle(t)).getPropertyCSSValue(e),r=0,s=(a=this.vendors).length;s>r;r++)o=a[r],n=n||i.getPropertyCSSValue("-"+o+"-"+e);return n},r.prototype.animationName=function(t){var e;try{e=this.vendorCSS(t,"animation-name").cssText}catch(n){e=window.getComputedStyle(t).getPropertyValue("animation-name")}return"none"===e?"":e},r.prototype.cacheAnimationName=function(t){return this.animationNameCache.set(t,this.animationName(t))},r.prototype.cachedAnimationName=function(t){return this.animationNameCache.get(t)},r.prototype.scrollHandler=function(){return this.scrolled=!0},r.prototype.scrollCallback=function(){var t;return!this.scrolled||(this.scrolled=!1,this.boxes=function(){var e,n,i,o;for(o=[],e=0,n=(i=this.boxes).length;n>e;e++)(t=i[e])&&(this.isVisible(t)?this.show(t):o.push(t));return o}.call(this),this.boxes.length||this.config.live)?void 0:this.stop()},r.prototype.offsetTop=function(t){for(var e;void 0===t.offsetTop;)t=t.parentNode;for(e=t.offsetTop;t=t.offsetParent;)e+=t.offsetTop;return e},r.prototype.isVisible=function(t){var e,n,i,o,r;return n=t.getAttribute("data-wow-offset")||this.config.offset,o=(r=window.pageYOffset)+Math.min(this.element.clientHeight,innerHeight)-n,e=(i=this.offsetTop(t))+t.clientHeight,o>=i&&e>=r},r.prototype.util=function(){return null!=this._util?this._util:this._util=new e},r}()}).call(this);



(function () {
  var t, e, n,
    i = function (t, e) {
      return function () {
        return t.apply(e, arguments);
      };
    },
    o = [].indexOf;

  e = (function () {
    function t() { }
    t.prototype.extend = function (t, e) {
      var n, i;
      for (n in e) {
        i = e[n];
        if (t[n] == null) t[n] = i;
      }
      return t;
    };
    return t;
  })();

  n = this.WeakMap || this.MozWeakMap;
  t = this.MutationObserver || this.WebkitMutationObserver || this.MozMutationObserver;

  this.WOW = (function () {
    function r(t) {
      if (t == null) t = {};
      this.scrollCallback = i(this.scrollCallback, this);
      this.scrollHandler = i(this.scrollHandler, this);
      this.start = i(this.start, this);
      this.scrolled = true;
      this.config = this.util().extend(t, this.defaults);
      this.animationNameCache = new n();
    }

    r.prototype.defaults = {
      boxClass: "wow",
      animateClass: "animated",
      offset: 0,
      live: true,
    };

    r.prototype.init = function () {
      var t;
      this.element = window.document.documentElement;
      t = document.readyState;
      if (t === "interactive" || t === "complete") {
        this.start();
      } else {
        document.addEventListener("DOMContentLoaded", this.start);
      }
      this.finished = [];
    };

    r.prototype.start = function () {
      var e, n, i, o;

      this.stopped = false;

      this.boxes = (function () {
        var t, n, i, o;
        o = [];
        t = 0;
        n = (i = this.element.querySelectorAll("." + this.config.boxClass)).length;
        for (; t < n; t++) {
          e = i[t];
          o.push(e);
        }
        return o;
      }).call(this);

      this.all = (function () {
        var t, n, i, o;
        o = [];
        t = 0;
        n = (i = this.boxes).length;
        for (; t < n; t++) {
          e = i[t];
          o.push(e);
        }
        return o;
      }).call(this);

      if (this.boxes.length) {
        for (n = 0, i = (o = this.boxes).length; n < i; n++) {
          e = o[n];
          this.applyStyle(e, true);
        }
      }

      window.addEventListener("scroll", this.scrollHandler, false);
      window.addEventListener("resize", this.scrollHandler, false);
      this.interval = setInterval(this.scrollCallback, 50);

      if (this.config.live) {
        new t(
          (function (_this) {
            return function (e) {
              var n, i, o, r, s;
              s = [];
              for (o = 0, r = e.length; o < r; o++) {
                i = e[o];
                s.push(
                  (function () {
                    var t, e, o, r;
                    r = [];
                    for (t = 0, e = (o = i.addedNodes || []).length; t < e; t++) {
                      n = o[t];
                      r.push(this.doSync(n));
                    }
                    return r;
                  }).call(_this)
                );
              }
              return s;
            };
          })(this)
        ).observe(document.body, { childList: true, subtree: true });
      }
    };

    r.prototype.stop = function () {
      this.stopped = true;
      window.removeEventListener("scroll", this.scrollHandler, false);
      window.removeEventListener("resize", this.scrollHandler, false);
      if (this.interval != null) clearInterval(this.interval);
    };

    r.prototype.sync = function () {
      return t.notSupported ? this.doSync(this.element) : void 0;
    };

    r.prototype.doSync = function (t) {
      var e, n, i, r, s;
      if (!this.stopped) {
        if (t == null) t = this.element;
        if (t.nodeType !== 1) return;

        s = [];
        n = 0;
        i = (r = (t = t.parentNode || t).querySelectorAll("." + this.config.boxClass)).length;
        for (; n < i; n++) {
          e = r[n];
          if (o.call(this.all, e) < 0) {
            this.applyStyle(e, true);
            this.boxes.push(e);
            this.all.push(e);
            s.push(this.scrolled = true);
          } else {
            s.push(void 0);
          }
        }
        return s;
      }
    };

    r.prototype.show = function (t) {
      this.applyStyle(t);
      return (t.className = t.className + " " + this.config.animateClass);
    };

    r.prototype.applyStyle = function (t, e) {
      var n, i, o, r;
      i = t.getAttribute("data-wow-duration");
      n = t.getAttribute("data-wow-delay");
      o = t.getAttribute("data-wow-iteration");
      this.animate(
        (r = this),
        function () {
          return r.customStyle(t, e, i, n, o);
        }
      );
    };

    r.prototype.animate =
      "requestAnimationFrame" in window
        ? function (t) {
            return window.requestAnimationFrame(t);
          }
        : function (t) {
            return t();
          };

    r.prototype.customStyle = function (t, e, n, i, o) {
      if (e) this.cacheAnimationName(t);
      t.style.visibility = e ? "hidden" : "visible";
      if (n) this.vendorSet(t.style, { animationDuration: n });
      if (i) this.vendorSet(t.style, { animationDelay: i });
      if (o) this.vendorSet(t.style, { animationIterationCount: o });
      this.vendorSet(t.style, {
        animationName: e ? "none" : this.cachedAnimationName(t),
      });
      return t;
    };

    r.prototype.vendors = ["moz", "webkit"];

    r.prototype.vendorSet = function (t, e) {
      var n, i, o, r;
      r = [];
      for (n in e) {
        i = e[n];
        t["" + n] = i;
        r.push(
          (function () {
            var e, r, s, a;
            a = [];
            for (e = 0, r = (s = this.vendors).length; e < r; e++) {
              o = s[e];
              a.push(
                (t["" + o + n.charAt(0).toUpperCase() + n.substr(1)] = i)
              );
            }
            return a;
          }).call(this)
        );
      }
      return r;
    };

    r.prototype.vendorCSS = function (t, e) {
      var n, i, o, r, s, a;
      i = window.getComputedStyle(t);
      n = i.getPropertyCSSValue(e);
      r = 0;
      s = (a = this.vendors).length;
      for (; r < s; r++) {
        o = a[r];
        n = n || i.getPropertyCSSValue("-" + o + "-" + e);
      }
      return n;
    };

    r.prototype.animationName = function (t) {
      var e;
      try {
        e = this.vendorCSS(t, "animation-name").cssText;
      } catch (n) {
        e = window.getComputedStyle(t).getPropertyValue("animation-name");
      }
      if (e === "none") return "";
      return e;
    };

    r.prototype.cacheAnimationName = function (t) {
      return this.animationNameCache.set(t, this.animationName(t));
    };

    r.prototype.cachedAnimationName = function (t) {
      return this.animationNameCache.get(t);
    };

    r.prototype.scrollHandler = function () {
      return (this.scrolled = true);
    };

    r.prototype.scrollCallback = function () {
      var t;
      if (!this.scrolled) return;
      this.scrolled = false;

      this.boxes = (function () {
        var e, n, i, o;
        o = [];
        e = 0;
        n = (i = this.boxes).length;
        for (; e < n; e++) {
          if ((t = i[e])) {
            if (this.isVisible(t)) {
              this.show(t);
            } else {
              o.push(t);
            }
          }
        }
        return o;
      }).call(this);

      if (!this.boxes.length && !this.config.live) this.stop();
    };

    r.prototype.offsetTop = function (t) {
      var e;
      while (t.offsetTop === void 0) t = t.parentNode;
      e = t.offsetTop;
      while ((t = t.offsetParent)) e += t.offsetTop;
      return e;
    };

    r.prototype.isVisible = function (t) {
      var e, n, i, o, r;
      n = t.getAttribute("data-wow-offset") || this.config.offset;
      r = window.pageYOffset;
      o = r + Math.min(this.element.clientHeight, innerHeight) - n;
      e = (i = this.offsetTop(t)) + t.clientHeight;
      return o >= i && e >= r;
    };

    r.prototype.util = function () {
      return this._util != null ? this._util : (this._util = new e());
    };

    return r;
  })();
}).call(this);
